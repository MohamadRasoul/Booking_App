<?php

namespace {{ namespace }};

use {{ namespacedModel }};
use {{ rootNamespace }}Http\Controllers\Controller;
use {{ namespacedRequests }}
use Illuminate\Http\RedirectResponse;
use Illuminate\View\View;

class {{ class }} extends Controller
{

    public function index(): View
    {
        /*
        ${{ modelVariable }}s = {{ model }}::latest()->get();


        return view(
            'dashboard.pages.${{ modelVariable }}.index',
            compact('${{ modelVariable }}s')
        );
        */
    }


    public function create(): View
    {
        /*

        return view(
            'dashboard.pages.${{ modelVariable }}.create',
        );
        */
    }


    public function store({{ storeRequest }} $request): RedirectResponse
    {
        /*

        // Store {{ model }}
        ${{ modelVariable }} = {{ model }}::create($request->validated());


        // Add Image to {{ model }}
        ${{ modelVariable }}
            ->addMediaFromRequest('image')
            ->toMediaCollection('{{ model }}');


        return back();
        */

    }


    public function show({{ model }} ${{ modelVariable }}): View
    {
        /*
        return view(
            'dashboard.pages.${{ modelVariable }}.show',
            compact('${{ modelVariable }}')
        );
        */

    }


    public function edit({{ model }} ${{ modelVariable }}): View
    {
        /*

        return view(
            'dashboard.pages.${{ modelVariable }}.edit',
            compact('${{ modelVariable }}')
        );

        */

    }


    public function update({{ updateRequest }} $request, {{ model }} ${{ modelVariable }}): RedirectResponse
    {
        /*

        // Update {{ model }}
        ${{ modelVariable }}->update($request->validated());


        // Edit Image for  {{ model }} if exist
        $request->hasFile('image') &&
            ${{ modelVariable }}
                ->addMediaFromRequest('image')
                ->toMediaCollection('{{ model }}');

        return back();
        */


    }


    public function destroy({{ model }} ${{ modelVariable }}): RedirectResponse
    {
        /*
        // Delete {{ model }}
        ${{ modelVariable }}->delete();

ch
        return back();
        */
    }
}
